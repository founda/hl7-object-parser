"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _simpleHl = _interopRequireDefault(require("simple-hl7"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
class hl7 {
  constructor(message, config) {
    const hl7Parser = new _simpleHl.default.Parser();
    message = hl7Parser.parse(message);
    this._message = message;
    this._config = config;
  }
  getSegmentsByType(type) {
    return this._message.segments.filter(item => {
      return item.name === type;
    });
  }

  /**
   * @description Convert from config mapping file hl7 to object
   * @return {{}}
   */
  process() {
    let obj = {};
    for (let segment in this._config.mapping) {
      let segmentType = segment.toUpperCase();
      let segmentsOfType = segmentType === 'MSH' ? [this._message.header] : this.getSegmentsByType(segment.toUpperCase());
      obj[segment] = [];
      for (let s of segmentsOfType) {
        let tmpObj = {};
        for (let value of this._config.mapping[segment].values) {
          if (value.field && s instanceof Object) {
            let index1 = value.component[0];
            let index2 = value.component[1];
            if (s.getField(index1).includes('~')) {
              let split = s.getField(index1).split('~');
              let array = [];
              for (let v of split) {
                array.push(v.split('^'));
              }
              let output = [];
              for (let v in array) {
                array[v][value.component[1] - 1] ? output.push(array[v][value.component[1] - 1]) : output.push('');
              }
              this._generateObject(tmpObj, value.field, output);
            } else {
              this._generateObject(tmpObj, value.field, s.getComponent(index1, index2));
            }
          }
        }
        if (segmentsOfType.length > 1) {
          obj[segment].push(tmpObj[segment]);
        } else {
          obj[segment] = tmpObj[segment];
        }
      }
    }
    return obj;
  }

  /**
   * @description Add attribute(s) into existing object
   * @param obj
   * @param property
   * @param value
   * @private
   */
  _generateObject(obj, property, value) {
    let paths = property.split('.');
    let i = 0;
    let tmp = obj;
    for (; i < paths.length - 1; i++) {
      tmp = tmp[paths[i]] ? Object.assign(tmp[paths[i]], tmp[paths[i]]) : tmp[paths[i]] = {};
    }
    tmp[paths[i]] = value;
  }
}
exports.default = hl7;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfc2ltcGxlSGwiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsImUiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsImhsNyIsImNvbnN0cnVjdG9yIiwibWVzc2FnZSIsImNvbmZpZyIsImhsN1BhcnNlciIsInNpbXBsZUhMNyIsIlBhcnNlciIsInBhcnNlIiwiX21lc3NhZ2UiLCJfY29uZmlnIiwiZ2V0U2VnbWVudHNCeVR5cGUiLCJ0eXBlIiwic2VnbWVudHMiLCJmaWx0ZXIiLCJpdGVtIiwibmFtZSIsInByb2Nlc3MiLCJvYmoiLCJzZWdtZW50IiwibWFwcGluZyIsInNlZ21lbnRUeXBlIiwidG9VcHBlckNhc2UiLCJzZWdtZW50c09mVHlwZSIsImhlYWRlciIsInMiLCJ0bXBPYmoiLCJ2YWx1ZSIsInZhbHVlcyIsImZpZWxkIiwiT2JqZWN0IiwiaW5kZXgxIiwiY29tcG9uZW50IiwiaW5kZXgyIiwiZ2V0RmllbGQiLCJpbmNsdWRlcyIsInNwbGl0IiwiYXJyYXkiLCJ2IiwicHVzaCIsIm91dHB1dCIsIl9nZW5lcmF0ZU9iamVjdCIsImdldENvbXBvbmVudCIsImxlbmd0aCIsInByb3BlcnR5IiwicGF0aHMiLCJpIiwidG1wIiwiYXNzaWduIiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jbGFzcy9obDctMi40L2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBzaW1wbGVITDcgZnJvbSAnc2ltcGxlLWhsNydcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgaGw3IHtcblxuICBjb25zdHJ1Y3RvcihtZXNzYWdlLCBjb25maWcpIHtcbiAgICBjb25zdCBobDdQYXJzZXIgPSBuZXcgc2ltcGxlSEw3LlBhcnNlcigpXG4gICAgbWVzc2FnZSA9IGhsN1BhcnNlci5wYXJzZShtZXNzYWdlKVxuICAgIHRoaXMuX21lc3NhZ2UgPSBtZXNzYWdlXG4gICAgdGhpcy5fY29uZmlnID0gY29uZmlnXG4gIH1cblxuICBnZXRTZWdtZW50c0J5VHlwZSh0eXBlKSB7XG4gICAgcmV0dXJuIHRoaXMuX21lc3NhZ2Uuc2VnbWVudHMuZmlsdGVyKChpdGVtKSA9PiB7XG4gICAgICByZXR1cm4gaXRlbS5uYW1lID09PSB0eXBlXG4gICAgfSlcbiAgfVxuXG4gIC8qKlxuICAgKiBAZGVzY3JpcHRpb24gQ29udmVydCBmcm9tIGNvbmZpZyBtYXBwaW5nIGZpbGUgaGw3IHRvIG9iamVjdFxuICAgKiBAcmV0dXJuIHt7fX1cbiAgICovXG4gIHByb2Nlc3MoKSB7XG4gICAgbGV0IG9iaiA9IHt9XG4gICAgZm9yIChsZXQgc2VnbWVudCBpbiB0aGlzLl9jb25maWcubWFwcGluZykge1xuICAgICAgbGV0IHNlZ21lbnRUeXBlID0gc2VnbWVudC50b1VwcGVyQ2FzZSgpXG4gICAgICBsZXQgc2VnbWVudHNPZlR5cGUgPSAoc2VnbWVudFR5cGUgPT09ICdNU0gnKVxuICAgICAgICA/IFt0aGlzLl9tZXNzYWdlLmhlYWRlcl1cbiAgICAgICAgOiB0aGlzLmdldFNlZ21lbnRzQnlUeXBlKHNlZ21lbnQudG9VcHBlckNhc2UoKSlcblxuICAgICAgb2JqW3NlZ21lbnRdID0gW11cblxuICAgICAgZm9yIChsZXQgcyBvZiBzZWdtZW50c09mVHlwZSkge1xuICAgICAgICBsZXQgdG1wT2JqID0ge31cblxuICAgICAgICBmb3IgKGxldCB2YWx1ZSBvZiB0aGlzLl9jb25maWcubWFwcGluZ1tzZWdtZW50XS52YWx1ZXMpIHtcbiAgICAgICAgICBpZiAodmFsdWUuZmllbGQgJiYgcyBpbnN0YW5jZW9mIE9iamVjdCkge1xuICAgICAgICAgICAgbGV0IGluZGV4MSA9IHZhbHVlLmNvbXBvbmVudFswXVxuICAgICAgICAgICAgbGV0IGluZGV4MiA9IHZhbHVlLmNvbXBvbmVudFsxXVxuXG4gICAgICAgICAgICBpZiAocy5nZXRGaWVsZChpbmRleDEpLmluY2x1ZGVzKCd+JykpIHtcbiAgICAgICAgICAgICAgbGV0IHNwbGl0ID0gcy5nZXRGaWVsZChpbmRleDEpLnNwbGl0KCd+JylcbiAgICAgICAgICAgICAgbGV0IGFycmF5ID0gW11cbiAgICAgICAgICAgICAgZm9yIChsZXQgdiBvZiBzcGxpdCkge1xuICAgICAgICAgICAgICAgIGFycmF5LnB1c2godi5zcGxpdCgnXicpKVxuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgbGV0IG91dHB1dCA9IFtdXG4gICAgICAgICAgICAgIGZvciAobGV0IHYgaW4gYXJyYXkpIHtcbiAgICAgICAgICAgICAgICAoYXJyYXlbdl1bdmFsdWUuY29tcG9uZW50WzFdIC0gMV0pID8gb3V0cHV0LnB1c2goYXJyYXlbdl1bdmFsdWUuY29tcG9uZW50WzFdIC0gMV0pIDogb3V0cHV0LnB1c2goJycpXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgdGhpcy5fZ2VuZXJhdGVPYmplY3QodG1wT2JqLCB2YWx1ZS5maWVsZCwgb3V0cHV0KVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgdGhpcy5fZ2VuZXJhdGVPYmplY3QodG1wT2JqLCB2YWx1ZS5maWVsZCwgcy5nZXRDb21wb25lbnQoaW5kZXgxLCBpbmRleDIpKVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChzZWdtZW50c09mVHlwZS5sZW5ndGggPiAxKSB7XG4gICAgICAgICAgb2JqW3NlZ21lbnRdLnB1c2godG1wT2JqW3NlZ21lbnRdKVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIG9ialtzZWdtZW50XSA9IHRtcE9ialtzZWdtZW50XVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBvYmpcbiAgfVxuXG4gIC8qKlxuICAgKiBAZGVzY3JpcHRpb24gQWRkIGF0dHJpYnV0ZShzKSBpbnRvIGV4aXN0aW5nIG9iamVjdFxuICAgKiBAcGFyYW0gb2JqXG4gICAqIEBwYXJhbSBwcm9wZXJ0eVxuICAgKiBAcGFyYW0gdmFsdWVcbiAgICogQHByaXZhdGVcbiAgICovXG4gIF9nZW5lcmF0ZU9iamVjdChvYmosIHByb3BlcnR5LCB2YWx1ZSkge1xuICAgIGxldCBwYXRocyA9IHByb3BlcnR5LnNwbGl0KCcuJylcbiAgICBsZXQgaSA9IDBcbiAgICBsZXQgdG1wID0gb2JqXG4gICAgZm9yICg7IGkgPCBwYXRocy5sZW5ndGggLSAxOyBpKyspIHtcbiAgICAgIHRtcCA9ICh0bXBbcGF0aHNbaV1dKSA/IE9iamVjdC5hc3NpZ24odG1wW3BhdGhzW2ldXSwgdG1wW3BhdGhzW2ldXSkgOiB0bXBbcGF0aHNbaV1dID0ge31cbiAgICB9XG4gICAgdG1wW3BhdGhzW2ldXSA9IHZhbHVlXG4gIH1cblxufVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxJQUFBQSxTQUFBLEdBQUFDLHNCQUFBLENBQUFDLE9BQUE7QUFBa0MsU0FBQUQsdUJBQUFFLENBQUEsV0FBQUEsQ0FBQSxJQUFBQSxDQUFBLENBQUFDLFVBQUEsR0FBQUQsQ0FBQSxLQUFBRSxPQUFBLEVBQUFGLENBQUE7QUFFbkIsTUFBTUcsR0FBRyxDQUFDO0VBRXZCQyxXQUFXQSxDQUFDQyxPQUFPLEVBQUVDLE1BQU0sRUFBRTtJQUMzQixNQUFNQyxTQUFTLEdBQUcsSUFBSUMsaUJBQVMsQ0FBQ0MsTUFBTSxDQUFDLENBQUM7SUFDeENKLE9BQU8sR0FBR0UsU0FBUyxDQUFDRyxLQUFLLENBQUNMLE9BQU8sQ0FBQztJQUNsQyxJQUFJLENBQUNNLFFBQVEsR0FBR04sT0FBTztJQUN2QixJQUFJLENBQUNPLE9BQU8sR0FBR04sTUFBTTtFQUN2QjtFQUVBTyxpQkFBaUJBLENBQUNDLElBQUksRUFBRTtJQUN0QixPQUFPLElBQUksQ0FBQ0gsUUFBUSxDQUFDSSxRQUFRLENBQUNDLE1BQU0sQ0FBRUMsSUFBSSxJQUFLO01BQzdDLE9BQU9BLElBQUksQ0FBQ0MsSUFBSSxLQUFLSixJQUFJO0lBQzNCLENBQUMsQ0FBQztFQUNKOztFQUVBO0FBQ0Y7QUFDQTtBQUNBO0VBQ0VLLE9BQU9BLENBQUEsRUFBRztJQUNSLElBQUlDLEdB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